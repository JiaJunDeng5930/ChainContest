version: "0.1.0"
projectName: "chaincontest-dev"

services:
  - name: "hardhat-node"
    dockerfile: "contracts/Dockerfile"
    context: "."
    ports:
      - host: 48545
        container: 8545
    profiles:
      - "core"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8545"]
      interval: "10s"
      timeout: "5s"
      retries: 5

  - name: "postgres"
    image: "postgres:16-alpine"
    command: ["postgres", "-c", "max_connections=200"]
    ports:
      - host: 55432
        container: 5432
    environment:
      POSTGRES_USER: "chaincontest"
      POSTGRES_PASSWORD: "chaincontest"
      POSTGRES_DB: "chaincontest"
    profiles:
      - "core"
    healthcheck:
      test: "CMD-SHELL pg_isready -U chaincontest"
      interval: "10s"
      timeout: "5s"
      retries: 5
    volumes:
      - "chaincontest-postgres:/var/lib/postgresql/data"

  - name: "redis"
    image: "redis:7-alpine"
    ports:
      - host: 56379
        container: 6379
    profiles:
      - "core"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: "10s"
      timeout: "5s"
      retries: 5

  - name: "api-server"
    dockerfile: "apps/api-server/Dockerfile"
    context: "."
    dependsOn:
      - "postgres"
      - "redis"
      - "hardhat-node"
    ports:
      - host: 44000
        container: 4000
    environment:
      PORT: "4000"
      HOST: "0.0.0.0"
    profiles:
      - "core"

  - name: "web-ui"
    dockerfile: "apps/web-ui/Dockerfile"
    context: "."
    dependsOn:
      - "api-server"
    ports:
      - host: 43000
        container: 3000
    environment:
      PORT: "3000"
      HOST: "0.0.0.0"
      API_BASE_URL: "http://api-server:4000"
    profiles:
      - "core"

  - name: "indexer-event"
    dockerfile: "apps/indexer/event/Dockerfile"
    context: "."
    dependsOn:
      - "postgres"
      - "redis"
      - "hardhat-node"
    ports:
      - host: 4005
        container: 4005
    profiles:
      - "indexer"

  - name: "indexer-tasks"
    dockerfile: "apps/indexer/tasks/Dockerfile"
    context: "."
    dependsOn:
      - "postgres"
      - "redis"
      - "hardhat-node"
    ports:
      - host: 4010
        container: 4010
    profiles:
      - "indexer"

profiles:
  - key: "core"
    description: "Core web stack: database, cache, API, and web UI."
    defaultEnabled: true
    services:
      - "hardhat-node"
      - "postgres"
      - "redis"
      - "api-server"
      - "web-ui"

  - key: "indexer"
    description: "Indexer workloads for blockchain event processing."
    defaultEnabled: false
    services:
      - "indexer-event"
      - "indexer-tasks"

volumes:
  - name: "chaincontest-postgres"
    preserveOnReset: true
    description: "Persistent database volume for local development data."
  - name: "indexer-cache"
    preserveOnReset: false
    description: "Ephemeral cache for indexer worker outputs."

envFiles:
  - "dev-bootstrap.env"

prerequisites:
  dockerVersion: "24.0.0"
  composeVersion: "2.24.0"
  cpuCores: 4
  memoryGb: 6
  portsInUse:
    - port: 48545
      description: "Hardhat development node (host override)"
    - port: 55432
      description: "PostgreSQL database (host override)"
    - port: 56379
      description: "Redis cache (host override)"
    - port: 43000
      description: "Web UI (host override)"
    - port: 44000
      description: "API server (host override)"

logging:
  format: "table"
  retainComposeLogs: false

resetPolicy:
  mode: "preserve"
